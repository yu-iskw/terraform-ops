---
description:
globs:
alwaysApply: true
---
# Project Directory Structure

This project follows a standard Go project layout.

- `cmd/`: Contains the main application entry points. Specifically, `cmd/terraform-ops/main.go` is the main CLI application.
- `internal/`: Houses private application and library code. This includes:
    - `internal/app/`: Core application logic and CLI command definitions. See [internal/app/app.go](mdc:internal/app/app.go)
    - `internal/pkg/`: Internal packages, such as [config.go](mdc:internal/pkg/config.go) for application configuration
    - `internal/show_terraform/`: Show Terraform command implementation
    - `internal/plan_graph/`: Plan graph command implementation
    - `internal/list_providers/`: List providers command implementation
- `pkg/`: Contains public library code that can be used by other applications. For example, [pkg/terraform/client.go](mdc:pkg/terraform/client.go) handles interactions with Terraform.
- `configs/`: Stores application configuration files, such as [config.yaml](mdc:configs/config.yaml).
- `integration_tests/`: Integration and end-to-end tests, organized by command:
    - `integration_tests/show_terraform/`: Integration tests for show-terraform command
    - `integration_tests/plan_graph/`: Integration tests for plan-graph command
- `docs/`: Documentation files, including:
    - [plan_graph.md](mdc:docs/plan_graph.md): Plan graph command documentation
    - [show_terraform.md](mdc:docs/show_terraform.md): Show terraform command documentation
    - [project_structure.md](mdc:docs/project_structure.md): Project structure overview
- `examples/`: Example usage of the project's functionalities.
- `scripts/`: Utility scripts for building, installing, and other operations.
- `assets/`: Static assets or resources.
- `tools/`: Development tools or utilities.
- `deployments/`: Deployment-related files.
